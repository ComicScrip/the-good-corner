
services:
  db:
    image: postgres:15-alpine
    stop_grace_period: 0s
    environment:
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  upload-service:
    environment:
      - HOST=/
    stop_grace_period: 0s
    build: file-upload-service
    volumes:
      - ./file-upload-service/files:/app/files

  backend:
    environment:
      - DB_HOST=db
    stop_grace_period: 0s
    depends_on:
      db:
        condition: service_healthy

    build: 
      context: backend
      dockerfile: Dockerfile.production
    env_file: backend/.env

  frontend:
    stop_grace_period: 0s
    build:
      context: frontend
      dockerfile: Dockerfile.production
    env_file: frontend/.env

  gateway:
    stop_grace_period: 0s
    restart: always
    build:
      context: gateway
      dockerfile: Dockerfile.production
    ports:
      - ${GATEWAY_PORT-80}:80
    